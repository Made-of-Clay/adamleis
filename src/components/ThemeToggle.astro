---
// NOTE: consider customizing this more so I have better control over
// the switch handle (& can make it fancier)
const { classes } = Astro.props;
---
<div class={`flex items-center ${classes}`}>
    <span class="far fa-sun text-xl"></span>
    <input
        id="theme-toggle"
        type="checkbox"
        class:list={[
            'toggle toggle-primary ',
            'hover:bg-amber-500',
            'mx-2',
            'transition-all'
        ]}
        checked
    >
    <span class="far fa-moon text-xl"></span>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const theme = {
        get isDark() {
            return this.get() === this.dark;
        },
        dark: 'night',
        light: 'fantasy',
        attr: 'data-theme',
        set(newTheme: string) {
            document.documentElement.setAttribute(this.attr, newTheme);
            localStorage.setItem(this.attr, newTheme);
        },
        get() {
            return document.documentElement.getAttribute(this.attr)
                || localStorage.getItem(this.attr);
        },
    };

    const toggle = document.querySelector<HTMLInputElement>('#theme-toggle');
    if (!toggle) return;

    const cachedTheme = localStorage.getItem(theme.attr) || '';
    if (cachedTheme === theme.light) {
        toggle.click();
        theme.set(cachedTheme);
    }
    toggle.addEventListener('change', () => {
        const nextTheme = toggle.checked ? theme.dark : theme.light;
        theme.set(nextTheme);
    });
});
</script>