<script>
    import ParticleNetworkCls from '@/particle-network.ts'; // "Cls" suffix is workaround for Astro's import bug

    let particleNetwork: ParticleNetworkCls;
    const bodyAttr = 'data-has-particle-network';
    function startAnimation() {
        const computedStyle = getComputedStyle(document.documentElement);
        const particleContainer = document.createElement('div');
        document.body.setAttribute(bodyAttr, 'true');
        document.body.prepend(particleContainer);
        particleContainer.id = 'particleContainer';
        const options = {
            particleColor: computedStyle.getPropertyValue('--particle'),
            background: computedStyle.getPropertyValue('--bg'),
            // interactive: true,
            // speed: 'fast',
            density: 'high',
            // hover: true,
            maxParticles: 10,
        } as const;
        particleNetwork = new ParticleNetworkCls(particleContainer, options);
    }
    function stopAnimation() {
        document.body.removeAttribute(bodyAttr);
        const particleContainer = document.getElementById('particleContainer');
        if (particleContainer) {
            particleContainer.remove();
        }
    }

    const reducedMotionMediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');
    if (!reducedMotionMediaQuery.matches) {
        startAnimation();
    }
    reducedMotionMediaQuery.addEventListener('change', (event) => {
        if (event.matches) {
            stopAnimation();
        } else {
            startAnimation();
        }
    });

    document.documentElement.addEventListener('change', () => {
        const computedStyle = getComputedStyle(document.documentElement);
        particleNetwork.updateOptions({
            particleColor: computedStyle.getPropertyValue('--particle'),
            background: computedStyle.getPropertyValue('--bg'),
        });
    });
</script>

<style is:global>
    [data-has-particle-network] main {
        transition:
            background-color var(--transitionSpeed) ease-in-out,
            box-shadow var(--transitionSpeed) ease-in-out;

        [data-theme='dark'] & {
            /* @media (prefers-color-scheme: dark) { */
            background-color: #00000066;
            box-shadow: 0 0 3rem black;
        }
        /* @media (prefers-color-scheme: light) { */
        [data-theme='light'] & {
            background-color: #ffffffbb;
            box-shadow: 0 0 3rem white;
        }
    }

    #particleContainer {
        position: fixed !important;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        z-index: -1;
    }
</style>
